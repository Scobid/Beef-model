# first iteration: load supply and demand by gender
if (it == 1){
fnsh_2["q_sup steer",  ii] <- round(fit(log_data(qq$fnshg$steer$supply$data))$yhat[i])
fnsh_2["q_sup heifer", ii] <- round(fit(log_data(qq$fnshg$heifer$supply$data))$yhat[i])
fnsh_2["q_dem steer",  ii] <- round(fit(log_data(qq$fnshg$steer$demand$data))$yhat[i])
fnsh_2["q_dem heifer", ii] <- round(fit(log_data(qq$fnshg$heifer$demand$data))$yhat[i])
}
if (it >= 2){
# steer supply
delta_q1   <- (fnsh_2["price steer", it-1] - fnsh_1["price steer", it-1])/fnsh_1["price steer", it-1]
coef1      <- fit(log_data(qq$fnshg$steer$supply$data))$coef["xSteer.Price....100.lbs....t.1."]
delta_q2   <- (bkgd_2["price steer", it-1] - bkgd_1["price steer", it-1])/bkgd_1["price steer", it-1]
coef2      <- fit(log_data(qq$fnshg$steer$supply$data))$coef["xRail.Grade.Feeder.Steer.Price....100.lbs....t.1."]
delta_q3   <- (fnsh_2["q_sup total", it-1]-fnsh_1["q_sup total", it-1])/fnsh_1["q_sup total", it-1]
coef3      <- fit(log_data(qq$fnshg$steer$supply$data))$coef["xSteers.t.1."]
net_effect <- (1+delta_q1*coef1)*(1+delta_q2*coef2)*(1+delta_q3*coef3)
fnsh_2["q_sup steer",  ii] <- round(net_effect*fit(log_data(qq$fnshg$steer$supply$data))$yhat[i])
# heifer supply
if (it == 2)  fnsh_2["q_sup heifer", ii] <- round(fit(log_data(qq$fnshg$heifer$supply$data))$yhat[i])
if (it > 2){
delta_q1   <- (fnsh_2["price heifer", it-2] - fnsh_1["price heifer", it-2])/fnsh_1["price heifer", it-2]
coef1      <- fit(log_data(qq$fnshg$heifer$supply$data))$coef["xHeifer.Price....100.lbs....t.2."]
delta_q2   <- (bkgd_2["price heifer", it-2] - bkgd_1["price heifer", it-2])/bkgd_1["price heifer", it-2]
coef2      <- fit(log_data(qq$fnshg$heifer$supply$data))$coef["xFeeder.Heifer.Rail.Grade.Price....100.lbs....t.2."]
net_effect <- (1+delta_q1*coef1)*(1+delta_q2*coef2)
fnsh_2["q_sup heifer", ii] <- round(net_effect*fit(log_data(qq$fnshg$heifer$supply$data))$yhat[i])
}
# steer demand (xFed.Steers..t.1.)
# not sure how to handle xSteer.Price....100.lbs..  xAAA.Boxed.Beef.Price....lbs..
delta_q1 <- (fnsh_2["q_sup steer", it-1] - fnsh_1["q_sup steer", it-1])/fnsh_1["q_sup steer", it-1]
coef1    <- fit(log_data(qq$fnshg$steer$demand$data))$coef["xFed.Steers..t.1."]
fnsh_2["q_dem steer",  ii] <- round((1+delta_q1*coef1)*fit(log_data(qq$fnshg$steer$demand$data))$yhat[i])
# heifer demand (xFed.Heifers..t.1.)
# not sure how to handle xHeifer.Price....100.lbs.. xAAA.Boxed.Beef.Price....lbs.
delta_q1 <- (fnsh_2["q_sup heifer", it-1] - fnsh_1["q_sup heifer", it-1])/fnsh_1["q_sup heifer", it-1]
coef1    <- fit(log_data(qq$fnshg$heifer$demand$data))$coef["xFed.Heifers..t.1."]
fnsh_2["q_dem heifer", ii] <- round((1+delta_q1*coef1)*fit(log_data(qq$fnshg$heifer$demand$data))$yhat[i])
rm(delta_q1, coef1, delta_q2, coef2, delta_q3, coef3)
}
## DERIVED QUANTITIES
# provincial supply and demand
fnsh_2["q_sup total",  ii] <- fnsh_2["q_sup steer",  ii]+fnsh_2["q_sup heifer",  ii]
fnsh_2["q_dem total",  ii] <- fnsh_2["q_dem steer",  ii]+fnsh_2["q_dem heifer",  ii]
## SHOCK BORDER SHUT DOWN AFFECTS FEEDER EXPORTS TO U.S. AND INTERPROVINCIAL IMPORTS
exc_dem <- sign(fnsh_2["q_dem total", ii] - fnsh_2["q_sup total", ii])
if (exc_dem ==  1){
fnsh_2["q_dem total",  ii] <- fnsh_2["q_sup total",  ii]
fnsh_2["q_dem heifer", ii] <- fnsh_2["q_sup heifer", ii]
fnsh_2["q_dem steer",  ii] <- fnsh_2["q_sup steer",  ii]
# load exports to u.s. by gender
fnsh_2["q_xus steer",  ii] <- 0 #round(fit(qq$fnshg$steer$export$data, logeq = F)$yhat[i])
fnsh_2["q_xus heifer", ii] <- 0 #round(fit(qq$fnshg$heifer$export$data, logeq = F)$yhat[i])
fnsh_2["q_xus total",  ii] <- 0 #fnsh_2["q_xus steer",  ii]+fnsh_2["q_xus heifer",  ii]
# calculate interprovincial imports (mip) as residual
fnsh_2["q_mip steer",  ii] <- 0 #fnsh_2["q_dem steer",   ii] + fnsh_2["q_xus steer",   ii] - fnsh_2["q_sup steer",   ii]
fnsh_2["q_mip heifer", ii] <- 0 #fnsh_2["q_dem heifer",  ii] + fnsh_2["q_xus heifer",  ii] - fnsh_2["q_sup heifer",  ii]
fnsh_2["q_mip total",  ii] <- 0 #fnsh_2["q_mip steer",   ii] + fnsh_2["q_mip heifer",  ii]
}
if (exc_dem == -1){
# excess supply exported to u.s.
fnsh_2["q_xus steer",  ii] <- fnsh_2["q_sup steer",  ii] - fnsh_2["q_dem steer",  ii]
fnsh_2["q_xus heifer", ii] <- fnsh_2["q_sup heifer", ii] - fnsh_2["q_dem heifer", ii]
fnsh_2["q_xus total",  ii] <- fnsh_2["q_sup total",  ii] - fnsh_2["q_dem total",  ii]
# calculate interprovincial imports (mip) as residual
fnsh_2["q_mip steer",  ii] <- 0 #fnsh_2["q_dem steer",   ii] + fnsh_2["q_xus steer",   ii] - fnsh_2["q_sup steer",   ii]
fnsh_2["q_mip heifer", ii] <- 0 #fnsh_2["q_dem heifer",  ii] + fnsh_2["q_xus heifer",  ii] - fnsh_2["q_sup heifer",  ii]
fnsh_2["q_mip total",  ii] <- 0 #fnsh_2["q_mip steer",   ii] + fnsh_2["q_mip heifer",  ii]
# market-clearing condition
fnsh_2["q_sup total",  ii] <- fnsh_2["q_dem total",  ii]
fnsh_2["q_sup heifer", ii] <- fnsh_2["q_dem heifer", ii]
fnsh_2["q_sup steer",  ii] <- fnsh_2["q_dem steer",  ii]
}
# residual slaughter capacity (in head per quarter)
spare_capacity2 <- max(assume2$capacity - fnsh_2["q_sup total", ii], 0)
###############################
#### NON-FED MARKET
###############################
## BASE QUANTITIES
if (it == 1) {
# demand by gender
cull_2["q_dem bull",  ii] <- round(fit(log_data(qq$culld$bulls$demand$data))$yhat[i])
cull_2["q_dem cow",   ii] <- round(fit(log_data(qq$culld$cows$demand$data))$yhat[i])
# load non-fed cow and bull inventory
cull_2["q_inv bull",   ii] <- inventory1["cull bull", ii]
cull_2["q_inv cow",    ii] <- inventory1["cull cow",  ii]
}
if (it >= 2){
# inventory response bulls
delta_q <- (cull_2["q_inv bull", it-1] - cull_1["q_inv bull", it-1])/cull_1["q_inv bull", it-1]
coef    <- fit(log_data(qq$culld$bulls$inventory$data))$coef["xInventory.Bulls..t.1."]
cull_2["q_inv bull",  ii] <- round((1+delta_q*coef)*fit(log_data(qq$culld$bulls$inventory$data))$yhat[i])
# inventory response cows
delta_q <- (cull_2["q_inv cow", it-1] - cull_1["q_inv cow", it-1])/cull_1["q_inv cow", it-1]
coef    <- fit(log_data(qq$culld$cows$inventory$data))$coef["xInventory.Beef.Cows..t.1."]
cull_2["q_inv cow",  ii] <- round((1+delta_q*coef)*fit(log_data(qq$culld$cows$inventory$data))$yhat[i])
# demand bull (xSlaughter.Bulls..t.1.)
delta_q <- (cull_2["q_dem bull", it-1] - cull_1["q_dem bull", it-1])/cull_1["q_dem bull", it-1]
coef    <- fit(log_data(qq$culld$bulls$demand$data))$coef["xSlaughter.Bulls..t.1."]
cull_2["q_dem bull",  ii] <- round((1+delta_q*coef)*fit(log_data(qq$culld$bulls$demand$data))$yhat[i])
# demand cow (xSlaughter.Cows..t.1.)
delta_q <- (cull_2["q_dem cow", it-1] - cull_1["q_dem cow", it-1])/cull_1["q_dem cow", it-1]
coef    <- fit(log_data(qq$culld$cows$demand$data))$coef["xSlaughter.Cows..t.1."]
cull_2["q_dem cow",  ii] <- round((1+delta_q*coef)*fit(log_data(qq$culld$cows$demand$data))$yhat[i])
rm (delta_q, coef)
}
## DERIVED QUANTITIES
# total provincial inventory
cull_2["q_inv total",  ii] <- cull_2["q_inv bull",  ii] + cull_2["q_inv cow",  ii]
# provincial demand
cull_2["q_dem total", ii] <- cull_2["q_dem bull",  ii]+cull_2["q_dem cow", ii]
## exports (not restricted due to zoning)
cull_2["q_xus bull",  ii] <- round(fit(qq$culld$bulls$export$data, logeq = F)$yhat[i])
cull_2["q_xus cow",   ii] <- round(fit(qq$culld$cows$export$data, logeq = F)$yhat[i])
cull_2["q_xus total", ii] <- cull_2["q_xus bull",  ii]+cull_2["q_xus cow", ii]
# apply slaughter capacity constraint to demand (seperately for each gender)
temp <- cull_2["q_dem bull",  ii]/cull_2["q_dem total",  ii]
if (cull_2["q_dem bull",  ii] > temp*spare_capacity2) {
cull_2["q_dem bull",  ii] <- temp*spare_capacity2
cull_2["capacity constraint", ii] <- 1
}
if (cull_2["q_dem cow",   ii] > (1-temp)*spare_capacity2) {
cull_2["q_dem cow",   ii] <- (1-temp)*spare_capacity2
cull_2["capacity constraint", ii] <- 1
}
cull_2["q_dem total", ii] <- cull_2["q_dem bull",  ii]+cull_2["q_dem cow", ii]
# supply incorporates change in inventory
# change in inventory is subject to some constraints
# you can add as much inventory as you want
# however, if the change in inventory is negative two constraints apply:
# (1) you cannot draw more inventory than currently available
# (2) you would not draw more inventory than the quantity demanded and exported
# without these two constraints, you get weird negative values in the result
# first calculate the change  (D = delta) in inventory
if (it == 1) {
temp   <- which(colnames(inventory1) == ii)
Dinv_b <- cull_2["q_inv bull", it] - inventory1["cull bull", temp-1]
Dinv_c <- cull_2["q_inv cow",  it] - inventory1["cull cow",  temp-1]
}
if (it >= 2) {
Dinv_b <- cull_2["q_inv bull", it] - cull_2["q_inv bull", it-1]
Dinv_c <- cull_2["q_inv cow",  it] - cull_2["q_inv cow",  it-1]
}
# if change in inventory is negative, apply restrictions
if (Dinv_b < 0) {
# (1) you cannot draw more inventory than currently available
Dinv_b <- -1*min(abs(Dinv_b), cull_2["q_inv bull", it])
# (2) you would not draw more inventory than the quantity demanded and exported
if (abs(Dinv_b) > cull_2["q_dem bull", it] + cull_2["q_xus bull", it]) {
Dinv_b <- -1*(cull_2["q_dem bull", it] + cull_2["q_xus bull", it])
# add excess back to inventory
if (it == 1) cull_2["q_inv bull", it] <- cull_2["q_inv bull", it] + abs(cull_2["q_inv bull", it] - inventory1["cull bull",  temp-1]) - abs(Dinv_c)
if (it >= 2) cull_2["q_inv bull", it] <- cull_2["q_inv bull", it] + abs(cull_2["q_inv bull", it] - cull_2["q_inv bull", it-1]) - abs(Dinv_c)
}
}
if (Dinv_c < 0) {
# (1) you cannot draw more inventory than currently available
Dinv_c <- -1*min(abs(Dinv_c), cull_2["q_inv cow", it])
# (2) you would not draw more inventory than the quantity demanded and exported
if (abs(Dinv_c) > cull_2["q_dem cow", it] + cull_2["q_xus cow", it]) {
Dinv_c <- -1*(cull_2["q_dem cow", it] + cull_2["q_xus cow", it])
# add excess back to inventory
if (it == 1) cull_2["q_inv cow", it] <- cull_2["q_inv cow", it] + abs(cull_2["q_inv cow", it] - inventory1["cull cow",  temp-1]) - abs(Dinv_c)
if (it >= 2) cull_2["q_inv cow", it] <- cull_2["q_inv cow", it] + abs(cull_2["q_inv cow", it] - cull_2["q_inv cow", it-1]) - abs(Dinv_c)
}
}
# derive provincial supply
cull_2["q_sup bull",  ii] <- cull_2["q_dem bull", ii] + cull_2["q_xus bull", ii] + Dinv_b
cull_2["q_sup cow",   ii] <- cull_2["q_dem cow",  ii] + cull_2["q_xus cow",  ii] + Dinv_c
cull_2["q_sup total", ii] <- cull_2["q_sup bull", ii] + cull_2["q_sup cow",  ii]
# remove temporary inventory variables
rm(temp, Dinv_b, Dinv_c)
###############################
#### PROCESSED BEEF MARKET
###############################
## BASE QUANTITIES
# first iteration: load provincial demand in lbs.
if (it == 1) proc_2["q_dem total", ii] <- round(fit(log_data(qq$markt$demand$data))$yhat[i]*assume2$popn[i])
if (it >= 2) {
delta_q <- (proc_2["q_dem total", it-1] - proc_1["q_dem total", it-1])/proc_1["q_dem total", it-1]
coef    <- fit(log_data(qq$markt$demand$data))$coef["xpcbeefdisappear..t.1."]
proc_2["q_dem total", ii] <- round((1+delta_q*coef)*fit(log_data(qq$markt$demand$data))$yhat[i]*assume2$popn[i])
rm(delta_q, coef)
}
## DERIVED QUANTITIES
# provincial supply in lbs.
proc_2["q_sup total", ii] <- fnsh_2["q_sup heifer", ii]*weight[1, ii]
proc_2["q_sup total", ii] <- fnsh_2["q_sup steer", ii]*weight[2, ii] + proc_2["q_sup total", ii]
proc_2["q_sup total", ii] <- cull_2["q_sup cow", ii]*weight[3, ii] + proc_2["q_sup total", ii]
proc_2["q_sup total", ii] <- round(cull_2["q_sup bull", ii]*weight[4, ii] + proc_2["q_sup total", ii])
# exports (not restricted due to zoning recognition)
proc_2["q_xus total", ii] <- round(fit(qq$markt$export$usa$data, logeq = F)$yhat[i])
proc_2["q_xrw total", ii] <- round(fit(qq$markt$export$row$data, logeq = T)$yhat[i])
# imports from U.S. and R.O.W. (excluding any shortage in provincial supply to be made up by the U.S.)
proc_2["q_mus total", ii] <- round(fit(qq$markt$import$usa$data, logeq = F)$yhat[i])
proc_2["q_mrw total", ii] <- round(fit(qq$markt$import$row$data, logeq = F)$yhat[i])
## market clearing condition
# residual demand
resid_dem <-  proc_2["q_dem total", ii] - proc_2["q_sup total", ii] + (proc_2["q_xus total", ii] + proc_2["q_xrw total", ii]) - (proc_2["q_mus total", ii] + proc_2["q_mrw total", ii])
# if residual demand is negative, you have excess supply and processed beef needs to move out
if (resid_dem < 0)  proc_2["q_mip total", ii] <- resid_dem
# if residual demand is positive, you have excess demand and processed beef needs to come in from the U.S.
if (resid_dem >= 0) proc_2["q_mus total", ii] <- proc_2["q_mus total", ii] + resid_dem
rm(resid_dem)
#   }
#
#   if (it >= 3) {
#
#     # exports and imports
#     proc_2["q_xus total", ii] <- round(fit(qq$markt$export$usa$data, logeq = F)$yhat[i])
#     proc_2["q_xrw total", ii] <- round(fit(qq$markt$export$row$data, logeq = T)$yhat[i])
#     proc_2["q_mus total", ii] <- round(fit(qq$markt$import$usa$data, logeq = F)$yhat[i])
#     proc_2["q_mrw total", ii] <- round(fit(qq$markt$import$row$data, logeq = F)$yhat[i])
#
#     # interprovincial imports
#     proc_2["q_mip total", ii] <- proc_2["q_dem total", ii] - proc_2["q_sup total", ii] + (proc_2["q_xus total", ii] + proc_2["q_xrw total", ii]) - (proc_2["q_mus total", ii] + proc_2["q_mrw total", ii])
#
#   }
###############################
#### PRICE RESPONSES
###############################
## NOTE: Prices transmit from retail backwards through supply chain. Therefore start at processing sector.
## Also, price response divided into a price transmission effect (pt_eff) and change in quantity effects (qs_eff and qd_eff for supply and demand, respectively)
## PROCESSING SECTOR PRICE CHANGES
# base prices
proc_2["price retail", ii] <- round(fit(log_data(pp$markt$retail$data))$yhat[i], 2)
proc_2["price wholes", ii] <- round(fit(log_data(pp$markt$wholesale$data))$yhat[i], 2)
## NOTE: There is nothing in the equations at the processed level that would change under this scenario
# Therefore no effects at the processing price level
## FINISHING SECTOR PRICE CHANGES
# base prices
fnsh_2["price steer", ii] <- round(fit(log_data(pp$fnshg$steer$data))$yhat[i], 2)
fnsh_2["price heifer", ii] <- round(fit(log_data(pp$fnshg$heifer$data))$yhat[i], 2)
# lag price transmission effect
c_pts <- 0
c_pth <- 0
d_pts <- 0
d_pth <- 0
if (it >= 2) {
d_pts <- pct_chg(fnsh_1["price steer", it-1], fnsh_2["price steer", it-1])
c_pts <- fit(log_data(pp$fnshg$steer$data))$coef["xSteer.Price....100.lbs....t.1."]
d_pth <- pct_chg(fnsh_1["price heifer", it-1], fnsh_2["price heifer", it-1])
c_pth <- fit(log_data(pp$fnshg$heifer$data))$coef["xHeifer.Price....100.lbs....t.1."]
}
# quantity demanded effects
d_qds <- pct_chg(fnsh_1["q_dem steer",  ii], fnsh_2["q_dem steer",  ii])
d_qdh <- pct_chg(fnsh_1["q_dem heifer", ii], fnsh_2["q_dem heifer", ii])
# quantity supplied effects
d_qss <- pct_chg(fnsh_1["q_sup steer",  ii], fnsh_2["q_sup steer",  ii])
d_qsh <- pct_chg(fnsh_1["q_sup heifer", ii], fnsh_2["q_sup heifer", ii])
# net price effect
dP_s <- (1+d_pts*c_pts)*(1+d_qds*eta1$id$fnsh$s)*(1+d_qss*eta1$is$fnsh$s)
dP_h <- (1+d_pth*c_pth)*(1+d_qdh*eta1$id$fnsh$h)*(1+d_qsh*eta1$is$fnsh$h)
fnsh_2["price steer",  ii] <- round(dP_s*fnsh_2["price steer",  ii], 2)
fnsh_2["price heifer", ii] <- round(dP_h*fnsh_2["price heifer", ii], 2)
## CULLED SECTOR PRICE CHANGES
# note: there are no transmissions across
# base prices
cull_2["price bull", ii] <- round(fit(log_data(pp$culld$steer$data))$yhat[i], 2)
cull_2["price cow",  ii] <- round(fit(log_data(pp$culld$heifer$data))$yhat[i], 2)
# lag price transmission effect
c_pts <- 0
c_pth <- 0
d_pts <- 0
d_pth <- 0
if (it >= 2) {
d_pts <- pct_chg(cull_1["price bull", it-1], cull_2["price bull", it-1])
c_pts <- fit(log_data(pp$culld$steer$data))$coef["xBull.Price..t.1."]
d_pth <- pct_chg(cull_1["price cow", it-1], cull_2["price cow", it-1])
c_pth <- fit(log_data(pp$culld$heifer$data))$coef["xCow.Price....100.lbs....t.1."]
}
# quantity demanded effects
d_qds <- pct_chg(cull_1["q_dem bull",  ii], cull_2["q_dem bull",  ii])
d_qdh <- pct_chg(cull_1["q_dem cow", ii], cull_2["q_dem cow", ii])
# quantity supplied effects
d_qss <- pct_chg(cull_1["q_sup bull",  ii], cull_2["q_sup bull",  ii])
d_qsh <- pct_chg(cull_1["q_sup cow", ii], cull_2["q_sup cow", ii])
# net price effect
dP_s <- (1+d_pts*c_pts)*(1+d_qds*eta1$id$cull$b)*(1+d_qss*eta1$is$cull$b)
dP_h <- (1+d_pth*c_pth)*(1+d_qdh*eta1$id$cull$c)*(1+d_qsh*eta1$is$cull$c)
if (d_qsh == -1) dP_h <- 1
cull_2["price bull",  ii] <- round(dP_s*cull_2["price bull",  ii], 2)
cull_2["price cow", ii] <- round(dP_h*cull_2["price cow", ii], 2)
## BACKGROUNDING SECTOR PRICE CHANGES
# base prices
bkgd_2["price steer",  ii] <- round(fit(log_data(pp$bkgrd$steer$data))$yhat[i], 2)
bkgd_2["price heifer", ii] <- round(fit(log_data(pp$bkgrd$heifer$data))$yhat[i], 2)
# price transmission effect: effect of fed cattle price change on culled cattle prices
d_pts <- pct_chg(round(fit(log_data(pp$fnshg$steer$data))$yhat[i], 2), fnsh_2["price steer",  ii])
c_pts <- fit(log_data(pp$bkgrd$steer$data))$coef["xSteer.Price....100.lbs.."]
d_pth <- pct_chg(round(fit(log_data(pp$fnshg$heifer$data))$yhat[i], 2), fnsh_2["price heifer",  ii])
c_pth <- fit(log_data(pp$bkgrd$heifer$data))$coef["xHeifer.Price....100.lbs.."]
# quantity demanded effects
d_qds <- pct_chg(bkgd_1["q_dem steer",  ii], bkgd_2["q_dem steer",  ii])
d_qdh <- pct_chg(bkgd_1["q_dem heifer", ii], bkgd_2["q_dem heifer", ii])
# quantity supplied effects
d_qss <- pct_chg(bkgd_1["q_sup steer",  ii], bkgd_2["q_sup steer",  ii])
d_qsh <- pct_chg(bkgd_1["q_sup heifer", ii], bkgd_2["q_sup heifer", ii])
# net price effect
dP_s <- (1+d_pts*c_pts)*(1+d_qds*eta1$id$bkgd$s)*(1+d_qss*eta1$is$bkgd$s)
dP_h <- (1+d_pth*c_pth)*(1+d_qdh*eta1$id$bkgd$h)*(1+d_qsh*eta1$is$bkgd$h)
bkgd_2["price steer",  ii] <- round(dP_s*bkgd_2["price steer",  ii], 2)
bkgd_2["price heifer", ii] <- round(dP_h*bkgd_2["price heifer", ii], 2)
## CALF SECTOR PRICE CHANGES
# base prices
calf_2["price steer",  ii] <- round(fit(log_data(pp$calf$steer$data))$yhat[i], 2)
calf_2["price heifer", ii] <- round(fit(log_data(pp$calf$heifer$data))$yhat[i], 2)
# price transmission effect: effect of backgrounded cattle price change on culled cattle prices
d_pts <- pct_chg(round(fit(log_data(pp$bkgrd$steer$data))$yhat[i], 2), bkgd_2["price steer",  ii])
c_pts <- fit(log_data(pp$calf$steer$data))$coef["xFeeder.Steer.Price....100.lbs.."]
d_pth <- pct_chg(round(fit(log_data(pp$bkgrd$heifer$data))$yhat[i], 2), bkgd_2["price heifer",  ii])
c_pth <- fit(log_data(pp$calf$heifer$data))$coef["xFeeder.Heifer.Railgrade.Price....100.lbs.."]
# quantity demanded effects
d_qds <- pct_chg(calf_1["q_dem steer",  ii], calf_2["q_dem steer",  ii])
d_qdh <- pct_chg(calf_1["q_dem heifer", ii], calf_2["q_dem heifer", ii])
# quantity supplied effects
d_qss <- pct_chg(calf_1["q_sup steer",  ii], calf_2["q_sup steer",  ii])
d_qsh <- pct_chg(calf_1["q_sup heifer", ii], calf_2["q_sup heifer", ii])
# net price effect
dP_s <- (1+d_pts*c_pts)*(1+d_qds*eta1$id$calf$s)*(1+d_qss*eta1$is$calf$s)
dP_h <- (1+d_pth*c_pth)*(1+d_qdh*eta1$id$calf$h)*(1+d_qsh*eta1$is$calf$h)
calf_2["price steer",  ii] <- round(dP_s*calf_2["price steer",  ii], 2)
calf_2["price heifer", ii] <- round(dP_h*calf_2["price heifer", ii], 2)
rm(c_pts, c_pth, d_pth, d_pts, d_qdh, d_qds, d_qsh, d_qss, dP_h, dP_s)
}
# calf_2
# bkgd_2
# fnsh_2
# cull_2
# proc_2
###############################
#### CHANGES IN WELFARE
###############################
# load functions
source("beef/code-version2/functions.R")
# run
source("beef/code-version2/step-2 counterfactual-A (federal zoning).R")
# matrix to store welfare changes
welfare <- list()
for (it in 1:ncol(calf_1)){
welfare[[it]] <- matrix(0, 5, 5, dimnames=list(c("calf", "bkgd", "fnsh", "cull", "proc"), c("base CS", "counter CS", "base PS", "counter PS", "delta net")))
## cow-calf
# calculations (using function)
tmp1 <- welfare_calc(calf_1["price steer",  it], calf_1["q_dem steer",  it], calf_1["q_sup steer",  it], eta1$d$calf, eta1$s$calf)
tmp2 <- welfare_calc(calf_2["price steer",  it], calf_2["q_dem steer",  it], calf_2["q_sup steer",  it], eta1$d$calf, eta1$s$calf)
tmp3 <- welfare_calc(calf_1["price heifer", it], calf_1["q_dem heifer", it], calf_1["q_sup heifer", it], eta1$d$calf, eta1$s$calf)
tmp4 <- welfare_calc(calf_2["price heifer", it], calf_2["q_dem heifer", it], calf_2["q_sup heifer", it], eta1$d$calf, eta1$s$calf)
cs_1 <- tmp1$cs + tmp3$cs
cs_2 <- tmp2$cs + tmp4$cs
ps_1 <- tmp1$ps + tmp3$ps
ps_2 <- tmp2$ps + tmp4$ps
# change in welfare
welfare[[it]]["calf", "base CS"]    <- cs_1
welfare[[it]]["calf", "counter CS"] <- cs_2
welfare[[it]]["calf", "base PS"]    <- ps_1
welfare[[it]]["calf", "counter PS"] <- ps_2
welfare[[it]]["calf", "delta net"]  <- (cs_2-cs_1)+(ps_2-ps_1)
## backgrounding
# calculations (using function)
tmp1 <- welfare_calc(bkgd_1["price steer",  it], bkgd_1["q_dem steer",  it], bkgd_1["q_sup steer",  it], eta1$d$bkgd, eta1$s$bkgd)
tmp2 <- welfare_calc(bkgd_2["price steer",  it], bkgd_2["q_dem steer",  it], bkgd_2["q_sup steer",  it], eta1$d$bkgd, eta1$s$bkgd)
tmp3 <- welfare_calc(bkgd_1["price heifer", it], bkgd_1["q_dem heifer", it], bkgd_1["q_sup heifer", it], eta1$d$bkgd, eta1$s$bkgd)
tmp4 <- welfare_calc(bkgd_2["price heifer", it], bkgd_2["q_dem heifer", it], bkgd_2["q_sup heifer", it], eta1$d$bkgd, eta1$s$bkgd)
cs_1 <- tmp1$cs + tmp3$cs
cs_2 <- tmp2$cs + tmp4$cs
ps_1 <- tmp1$ps + tmp3$ps
ps_2 <- tmp2$ps + tmp4$ps
# change in welfare
welfare[[it]]["bkgd", "base CS"]    <- cs_1
welfare[[it]]["bkgd", "counter CS"] <- cs_2
welfare[[it]]["bkgd", "base PS"]    <- ps_1
welfare[[it]]["bkgd", "counter PS"] <- ps_2
welfare[[it]]["bkgd", "delta net"]  <- (cs_2-cs_1)+(ps_2-ps_1)
## finishing
# calculations (using function)
tmp1 <- welfare_calc(fnsh_1["price steer",  it], fnsh_1["q_dem steer",  it], fnsh_1["q_sup steer",  it], eta1$d$fnsh$s, eta1$s$fnsh$s)
tmp2 <- welfare_calc(fnsh_2["price steer",  it], fnsh_2["q_dem steer",  it], fnsh_2["q_sup steer",  it], eta1$d$fnsh$s, eta1$s$fnsh$s)
tmp3 <- welfare_calc(fnsh_1["price heifer", it], fnsh_1["q_dem heifer", it], fnsh_1["q_sup heifer", it], eta1$d$fnsh$h, eta1$s$fnsh$h)
tmp4 <- welfare_calc(fnsh_2["price heifer", it], fnsh_2["q_dem heifer", it], fnsh_2["q_sup heifer", it], eta1$d$fnsh$h, eta1$s$fnsh$h)
cs_1 <- tmp1$cs + tmp3$cs
cs_2 <- tmp2$cs + tmp4$cs
ps_1 <- tmp1$ps + tmp3$ps
ps_2 <- tmp2$ps + tmp4$ps
# change in welfare
welfare[[it]]["fnsh", "base CS"]    <- cs_1
welfare[[it]]["fnsh", "counter CS"] <- cs_2
welfare[[it]]["fnsh", "base PS"]    <- ps_1
welfare[[it]]["fnsh", "counter PS"] <- ps_2
welfare[[it]]["fnsh", "delta net"]  <- (cs_2-cs_1)+(ps_2-ps_1)
## culled market
# calculations (using function)
tmp1 <- welfare_calc(cull_1["price bull",  it], cull_1["q_dem bull",  it], cull_1["q_sup bull",  it], eta1$d$cull$b, eta1$s$cull$b)
tmp2 <- welfare_calc(cull_2["price bull",  it], cull_2["q_dem bull",  it], cull_2["q_sup bull",  it], eta1$d$cull$b, eta1$s$cull$b)
tmp3 <- welfare_calc(cull_1["price cow", it], cull_1["q_dem cow", it], cull_1["q_sup cow", it], eta1$d$cull$c, eta1$s$cull$c)
tmp4 <- welfare_calc(cull_2["price cow", it], cull_2["q_dem cow", it], cull_2["q_sup cow", it], eta1$d$cull$c, eta1$s$cull$c)
cs_1 <- tmp1$cs + tmp3$cs
cs_2 <- tmp2$cs + tmp4$cs
ps_1 <- tmp1$ps + tmp3$ps
ps_2 <- tmp2$ps + tmp4$ps
# change in welfare
welfare[[it]]["cull", "base CS"]    <- cs_1
welfare[[it]]["cull", "counter CS"] <- cs_2
welfare[[it]]["cull", "base PS"]    <- ps_1
welfare[[it]]["cull", "counter PS"] <- ps_2
welfare[[it]]["cull", "delta net"]  <- (cs_2-cs_1)+(ps_2-ps_1)
## processed market
# calculations (using function)
tmp1 <- proc_1["q_dem total", it]
tmp2 <- proc_1["q_sup total", it] + (proc_1["q_xus total", ii] + proc_1["q_xrw total", ii]) - (proc_1["q_mus total", ii] + proc_1["q_mrw total", ii]) - proc_1["q_mip total", ii]
tmp3 <- welfare_calc(proc_1["price retail",  it], tmp1, tmp2, eta1$d$retail, abs(eta1$s$retail))
cs_1 <- tmp3$cs
ps_1 <- tmp3$ps
tmp1 <- proc_2["q_dem total", it]
tmp2 <- proc_2["q_sup total", it] + (proc_2["q_xus total", ii] + proc_2["q_xrw total", ii]) - (proc_2["q_mus total", ii] + proc_2["q_mrw total", ii]) - proc_2["q_mip total", ii]
tmp3 <- welfare_calc(proc_2["price retail",  it], tmp1, tmp2, eta1$d$retail, abs(eta1$s$retail))
cs_2 <- tmp3$cs
ps_2 <- tmp3$ps
rm(tmp1, tmp2, tmp3)
# change in welfare
welfare[[it]]["proc", "base CS"]    <- cs_1
welfare[[it]]["proc", "counter CS"] <- cs_2
welfare[[it]]["proc", "base PS"]    <- ps_1
welfare[[it]]["proc", "counter PS"] <- ps_2
welfare[[it]]["proc", "delta net"]  <- (cs_2-cs_1)+(ps_2-ps_1)
## round
welfare[[it]] <- round(welfare[[it]])
}
## annual welfare
welfare_yr     <- welfare[[1]]
names(welfare) <- colnames(calf_1)
welfare_yr[]   <- 0
for (i in 1:nrow(welfare_yr)) welfare_yr[i, ] <- welfare[[1]][i, ] + welfare[[2]][i, ] + welfare[[3]][i, ] + welfare[[4]][i, ]
round(welfare_yr/1e6, 2)
colSums(round(welfare_yr/1e6, 2))
# function to create a summary table
summary <- function(base, counterfactual) { cbind(base, counterfactual, (counterfactual-base)/base)}
# function to change quarterly results to annual
annual <- function(x) { c(round(rowMeans(x)[1:2], 2), rowSums(x)[3:nrow(x)])}
# cow-calf
calf_sum <- summary(annual(calf_1), annual(calf_2))
# backgrounding
bkgd_sum <- summary(annual(bkgd_1), annual(bkgd_2))
# finsihing (fed)
fnsh_sum <- summary(annual(fnsh_1), annual(fnsh_2))
# culled cattle
cull_sum <- summary(annual(cull_1), annual(cull_2))
# processed beef
proc_sum <- summary(annual(proc_1), annual(proc_2))
# write.csv(calf_sum, paste("beef/results/calf", "-", scenario, ".csv", sep=""))
# write.csv(bkgd_sum, paste("beef/results/bkgd", "-", scenario, ".csv", sep=""))
# write.csv(fnsh_sum, paste("beef/results/fnsh", "-", scenario, ".csv", sep=""))
# write.csv(cull_sum, paste("beef/results/cull", "-", scenario, ".csv", sep=""))
# write.csv(proc_sum, paste("beef/results/proc", "-", scenario, ".csv", sep=""))
#### summary tables in latex format ----
require(xtable)
## market impacts
# cow-calf
calf_sum[, 3] <- paste("(", round(100*calf_sum[, 3], 2), "%)", sep="")
xtable(calf_sum[c(1, 2, 3, 6, 9), ])
# backgrounding
bkgd_sum[, 3] <- paste("(", round(100*bkgd_sum[, 3], 2), "%)", sep="")
xtable(bkgd_sum[c(1, 2, 3, 6, 9, 12, 15), ])
# finishing
fnsh_sum[, 3] <- paste("(", round(100*fnsh_sum[, 3], 2), "%)", sep="")
xtable(fnsh_sum[c(1, 2, 3, 6, 9, 12), ])
# culled (non-fed)
cull_sum[, 3] <- paste("(", round(100*cull_sum[, 3], 2), "%)", sep="")
xtable(cull_sum[c(1, 2, 3, 6, 9, 12), ])
# processing
proc_sum[3:nrow(proc_sum), 1:2] <- round(as.numeric(proc_sum[3:nrow(proc_sum), 1:2])/1e6, 1)
proc_sum[, 3] <- paste("(", round(100*proc_sum[, 3], 2), "%)", sep="")
xtable(proc_sum)
## welfare impacts ----
welf_sum1 <- round(welfare_yr/1e6, 2)
welf_sum2 <- rbind(
cbind(welf_sum1[1, 1], welf_sum1[1, 2], 100*(welf_sum1[1, 2]-welf_sum1[1, 1])/welf_sum1[1, 1]),
cbind(welf_sum1[1, 3], welf_sum1[1, 4], 100*(welf_sum1[1, 4]-welf_sum1[1, 3])/welf_sum1[1, 3]),
rep(0, 3),
cbind(welf_sum1[2, 1], welf_sum1[2, 2], 100*(welf_sum1[2, 2]-welf_sum1[2, 1])/welf_sum1[2, 1]),
cbind(welf_sum1[2, 3], welf_sum1[2, 4], 100*(welf_sum1[2, 4]-welf_sum1[2, 3])/welf_sum1[2, 3]),
rep(0, 3),
cbind(welf_sum1[3, 1], welf_sum1[3, 2], 100*(welf_sum1[3, 2]-welf_sum1[3, 1])/welf_sum1[3, 1]),
cbind(welf_sum1[3, 3], welf_sum1[3, 4], 100*(welf_sum1[3, 4]-welf_sum1[3, 3])/welf_sum1[3, 3]),
rep(0, 3),
cbind(welf_sum1[4, 1], welf_sum1[4, 2], 100*(welf_sum1[4, 2]-welf_sum1[4, 1])/welf_sum1[4, 1]),
cbind(welf_sum1[4, 3], welf_sum1[4, 4], 100*(welf_sum1[4, 4]-welf_sum1[4, 3])/welf_sum1[4, 3]),
rep(0, 3),
cbind(welf_sum1[5, 1], welf_sum1[5, 2], 100*(welf_sum1[5, 2]-welf_sum1[5, 1])/welf_sum1[5, 1]),
cbind(welf_sum1[5, 3], welf_sum1[5, 4], 100*(welf_sum1[5, 4]-welf_sum1[5, 3])/welf_sum1[5, 3]),
rep(0, 3)
)
# cow-calf
welf_sum2[3,  ] <- cbind(welf_sum2[1, 1]+welf_sum2[2, 1], welf_sum2[1, 2]+welf_sum2[2, 2], 0)
welf_sum2[3, 3] <- 100*(welf_sum2[3, 2] - welf_sum2[3, 1])/welf_sum2[3, 1]
# backgrounding
welf_sum2[6,  ] <- cbind(welf_sum2[4, 1]+welf_sum2[5, 1], welf_sum2[4, 2]+welf_sum2[5, 2], 0)
welf_sum2[6, 3] <- 100*(welf_sum2[6, 2] - welf_sum2[6, 1])/welf_sum2[6, 1]
# finishing
welf_sum2[9,  ] <- cbind(welf_sum2[7, 1]+welf_sum2[8, 1], welf_sum2[7, 2]+welf_sum2[8, 2], 0)
welf_sum2[9, 3] <- 100*(welf_sum2[9, 2] - welf_sum2[9, 1])/welf_sum2[9, 1]
# non-fed
welf_sum2[12,  ] <- cbind(welf_sum2[10, 1]+welf_sum2[11, 1], welf_sum2[10, 2]+welf_sum2[11, 2], 0)
welf_sum2[12, 3] <- 100*(welf_sum2[12, 2] - welf_sum2[12, 1])/welf_sum2[12, 1]
# processing
welf_sum2[15,  ] <- cbind(welf_sum2[13, 1]+welf_sum2[14, 1], welf_sum2[13, 2]+welf_sum2[14, 2], 0)
welf_sum2[15, 3] <- 100*(welf_sum2[15, 2] - welf_sum2[15, 1])/welf_sum2[15, 1]
welf_sum2[, 3] <- paste("(", round(welf_sum2[, 3], 2), "%)", sep="")
xtable(welf_sum2)
welf_sum3 <- welf_sum2[c(3, 6, 9, 12, 15), ]
welf_sum3 <- rbind(welf_sum3, c(sum(as.numeric(welf_sum3[, 1])), sum(as.numeric(welf_sum3[, 2])), 0))
welf_sum3[6, 3] <- paste("(", round(100*(as.numeric(welf_sum3[6, 2])-as.numeric(welf_sum3[6, 1]))/as.numeric(welf_sum3[6, 1]), 2), "%)", sep="")
welf_sum3[6, ]
View(fit_inv_eta)
